{"version":3,"sources":["components/ThreadList.js","components/Home.js","components/Thread.js","Err.js","App.js","index.js"],"names":["ThreadList","useContext","ThreadContext","thread","setThreadPost","console","log","map","_","to","key","uuid","className","onClick","title","Home","handleSubmit","handleChange","post","Form","onSubmit","Input","name","value","onChange","placeholder","TextArea","content","Button","primary","type","style","margin","Thread","comments","threadPost","useState","reply","setReply","useEffect","find","id","Comment","Group","Header","as","dividing","Avatar","src","Content","Author","Text","Err","createContext","App","setPost","setComments","setThread","Provider","e","target","prevData","preventDefault","data","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01719972.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { ThreadContext } from \"../App\";\r\n\r\nfunction ThreadList() {\r\n  const { thread, setThreadPost } = useContext(ThreadContext);\r\n  console.log(thread);\r\n  return (\r\n    <div>\r\n      {thread &&\r\n        thread.map((_) => (\r\n          <NavLink to=\"/thread\" key={uuid()} className=\"post__list\">\r\n            <li onClick={() => setThreadPost(_)}>{_.title}</li>\r\n          </NavLink>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreadList;\r\n","import React, { useContext } from \"react\";\r\nimport ThreadList from \"./ThreadList\";\r\nimport { ThreadContext } from \"../App\";\r\nimport { Button, Form, Input,TextArea } from \"semantic-ui-react\";\r\nfunction Home() {\r\n  const { handleSubmit, handleChange, post } = useContext(ThreadContext);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Form onSubmit={handleSubmit} className='home__form'>\r\n        <Input\r\n          name=\"title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Title...\"\r\n          className=\"input__post\"\r\n        />\r\n        <TextArea\r\n          name=\"content\"\r\n          value={post.content}\r\n          onChange={handleChange}\r\n          placeholder=\"Something in mind?\"\r\n          className=\"input__post\"\r\n        />\r\n        <Button content=\"Post\" primary type=\"submit\" style={{margin:'.5rem'}}/>\r\n      </Form>\r\n      <ThreadList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ThreadContext } from \"../App\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport {\r\n  Button,\r\n  Comment,\r\n  Form,\r\n  Header,\r\n  Input,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nfunction Thread() {\r\n  const {\r\n    comments,\r\n    threadPost,\r\n    handleChange,\r\n    handleSubmit,\r\n    thread,\r\n  } = useContext(ThreadContext);\r\n  const [reply, setReply] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setReply(thread.find((_) => _.id === threadPost.id));\r\n  }, [thread, threadPost]);\r\n\r\n  return (\r\n    <div className=\"thread__container\">\r\n      {threadPost ? (\r\n        <div>\r\n          <h3 className=\"post__title\">{threadPost.title}</h3>\r\n          <div className=\"post__content\">{threadPost.content}</div>\r\n        </div>\r\n      ) : (\r\n        <h2 className=\"center\">Nothing to display</h2>\r\n      )}\r\n\r\n      {threadPost && (\r\n        <Form onSubmit={handleSubmit} className=\"form__container\">\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={comments.name}\r\n            onChange={handleChange}\r\n            className=\"comment\"\r\n          />\r\n          <TextArea\r\n            type=\"text\"\r\n            name=\"reply\"\r\n            placeholder=\"Your Comment...\"\r\n            value={comments.reply}\r\n            onChange={handleChange}\r\n            className=\"comment\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            content=\"Comment\"\r\n            primary\r\n            style={{ margin: \".2rem\" }}\r\n          />\r\n        </Form>\r\n      )}\r\n      {threadPost && (\r\n        <Comment.Group>\r\n          <Header as=\"h3\" dividing>\r\n            Comments\r\n          </Header>\r\n          {reply &&\r\n            reply.comments?.map((_) => {\r\n              return (\r\n                <Comment key={uuid()}>\r\n                  <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\r\n                  <Comment.Content>\r\n                    <Comment.Author as=\"a\">{_.name}</Comment.Author>\r\n                    <Comment.Text>{_.reply}</Comment.Text>\r\n                  </Comment.Content>\r\n                </Comment>\r\n              );\r\n            })}\r\n        </Comment.Group>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thread;\r\n","import React from 'react'\r\n\r\nfunction Err() {\r\n    return (\r\n        <div>\r\n            Page not found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Err\r\n","import React, { useState, createContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Thread from \"./components/Thread\";\r\nimport Err from \"./Err\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./app.scss\";\r\nexport const ThreadContext = createContext();\r\n\r\nfunction App() {\r\n  const [post, setPost] = useState({ title: \"\", content: \"\" });\r\n  const [comments, setComments] = useState({ name: \"\", reply: \"\" });\r\n  const [thread, setThread] = useState([]);\r\n  const [threadPost, setThreadPost] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"title\" || name === \"content\") {\r\n      setPost((prevData) => {\r\n        return { ...prevData, [name]: value };\r\n      });\r\n    } else {\r\n      setComments((prevData) => {\r\n        return { ...prevData, [name]: value };\r\n      });\r\n    }\r\n    // console.log(name, value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let id = uuid();\r\n    if (post.title || post.content) {\r\n      post.id = id;\r\n      setThread((prevData) => [...prevData, post]);\r\n      setPost({ title: \"\", content: \"\" });\r\n    } else {\r\n      setThread((prevData) => {\r\n        const data = thread.find((_) => _.id === threadPost.id);\r\n\r\n        comments.id = id;\r\n        if (!data.comments) {\r\n          data.comments = [comments];\r\n        } else {\r\n          data.comments = [...data.comments, comments];\r\n        }\r\n        return [...prevData];\r\n      });\r\n      setComments(() => {\r\n        return { name: \"\", reply: \"\" };\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Router>\r\n      <ThreadContext.Provider\r\n        value={{\r\n          post,\r\n          thread,\r\n          setThread,\r\n          setThreadPost,\r\n          threadPost,\r\n          handleChange,\r\n          handleSubmit,\r\n          setComments,\r\n          comments,\r\n        }}\r\n      >\r\n        <div className=\"header\">\r\n          <NavLink to=\"/\">\r\n            <h4>Home</h4>\r\n          </NavLink>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/thread\" component={Thread} />\r\n          <Route component={Err} />\r\n        </Switch>\r\n      </ThreadContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}